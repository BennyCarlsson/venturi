{"version":3,"sources":["views/Favorite/index.tsx","views/Destination/index.tsx","views/NotFound/index.tsx","views/StartPage/styles.ts","views/StartPage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Favorites","Destination","NotFound","Heading","styled","h1","StartPage","App","className","exact","path","Favorite","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAUeA,MARf,WACE,OACE,6CCMWC,MARf,WACE,OACE,+CCMWC,I,EAAAA,EARf,WACE,OACE,uC,QCFSC,E,MAAUC,EAAOC,GAAV,gDCSLC,MARf,WACE,OACE,8BACE,cAACH,EAAD,2BC+CSI,MAvCf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACA,gCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,SAIJ,8BACE,+BACE,6BACE,cAAC,IAAD,CAAME,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,aAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,eAAT,kCC7BCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ec6f0f79.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Favorites() {\n  return (\n    <div>\n      Favorites\n    </div>\n  );\n}\n\nexport default Favorites;\n","import React from 'react';\n\nfunction Destination() {\n  return (\n    <div>\n      Destination\n    </div>\n  );\n}\n\nexport default Destination;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      404\n    </div>\n  );\n}\n\nexport default NotFound;\n","import styled from 'styled-components'\n\nexport const Heading = styled.h1`\n  font-size: 64px;\n`\n","import React from 'react';\nimport {Heading} from './styles'\n\nfunction StartPage() {\n  return (\n    <div>\n      <Heading>StartPage</Heading>\n    </div>\n  );\n}\n\nexport default StartPage;\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Favorites from 'views/Favorite';\nimport Destination from 'views/Destination';\nimport NotFound from 'views/NotFound';\nimport StartPage from 'views/StartPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <StartPage />\n          </Route>\n          <Route path=\"/favorites\">\n            <Favorites/>\n          </Route>\n          <Route path=\"/destination\">\n            <Destination />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/favorites\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/destination\">Users</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}